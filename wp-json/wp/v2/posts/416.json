{"id":416,"date":"2019-10-11T14:30:00","date_gmt":"2019-10-11T14:30:00","guid":{"rendered":"https:\/\/rikkeisoft.com\/2019\/10\/11\/what-is-agile-software-development\/"},"modified":"2021-12-03T08:15:32","modified_gmt":"2021-12-03T08:15:32","slug":"what-is-agile-software-development","status":"publish","type":"post","link":"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/","title":{"rendered":"What is Agile Software Development?"},"content":{"rendered":"<p>Agile is a term used to describe approaches to software development emphasizing incremental delivery, team collaboration, continual planning, and continual learning, instead of trying to deliver it all at once near the end.<\/p>\n<p>&nbsp;<\/p>\n<p>Agile focuses on keeping the process lean and creating minimum viable products (MVPs) that go through a number of iterations before anything is final. Feedback is gathered and implemented continually and in all, it is a much more dynamic process where everyone is working together towards one goal.<\/p>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"574\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/agile-vs-waterfall-risk.png\" width=\"912\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:24px;\"><strong>SCRUM AND OTHER LEADING AGILE METHODS<\/strong><\/span><\/p>\n<p>&nbsp;<\/p>\n<p>Agile is a mindset and it&rsquo;s a set of values and principles. Agile is a way of thinking and acting. Agile is all about short cycles, iterative and incremental delivery, failing fast, getting feedback, delivering business value to customers early and about people, collaboration and interaction. Agile is a mindset which is all about transparency, inspection and adaptation. Agile however doesn&rsquo;t consist of any&nbsp;<a href=\"https:\/\/www.visual-paradigm.com\/scrum\/what-are-the-three-scrum-roles\/\">roles<\/a>, events or&nbsp;<a href=\"https:\/\/www.visual-paradigm.com\/scrum\/what-are-scrum-artifacts\/\">artifacts<\/a>. It&rsquo;s a mindset. For example,&nbsp;<a href=\"https:\/\/www.visual-paradigm.com\/scrum\/scrum-in-3-minutes\/\">Scrum<\/a>&nbsp;is one of the widely used frameworks under the Agile umbrella, which may help you in becoming more Agile, there are however many more frameworks within the Agile movement, like Kanban, XP, Crystal and many more as shown in the Figure below:&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"327\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/agile-umbrella.png\" width=\"370\" \/><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:18px;\"><strong>Scrum:<\/strong><\/span><\/p>\n<p>Scrum is a framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value. It is used for managing software projects and product or application development. Its focus is on an adaptive product development strategy where a cross-functional team works as a unit to reach a common goal within 2-4 weeks (<a href=\"https:\/\/www.visual-paradigm.com\/scrum\/what-is-sprint-in-scrum\/\">Sprint<\/a>). It consists of a collection of values, artifacts, roles, ceremonies, rules and best practices.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:18px;\"><strong>Lean:<\/strong><\/span><\/p>\n<p>Lean originated with the Toyota Production System, or TPS, which revolutionized the manufacture of physical goods in the 1950s, &lsquo;60s, and beyond. Lean maintains its hold in manufacturing but has also found new applications in knowledge work, helping businesses in all industries&nbsp;eliminate waste, improve processes, and boost innovation. Software development is a natural application of Lean methodology because, much like manufacturing, it generally follows a defined process, has some defined conditions of acceptance, and results in the delivery of tangible value. The key concepts that guide all practice of Lean methodology, which we call the Pillars of Lean. They are:<\/p>\n<ul>\n<li>Continuous improvement<\/li>\n<li>Respect for people<\/li>\n<li>Lightweight Leadership<\/li>\n<\/ul>\n<p><span style=\"font-size:18px;\"><strong>Kanban:<\/strong><\/span><\/p>\n<p>Kanban is a highly visual workflow management method that is popular among Lean teams. In fact, 83% of teams practicing Lean use Kanban to visualize and actively manage the creation of products with an emphasis on continual delivery, while not overburdening the development team. Like Scrum, Kanban is a process designed to help teams work together more effectively.<\/p>\n<p>Kanban is based on 3 basic principles:<\/p>\n<ul>\n<li>Visualize what you&rsquo;ll do today (workflow): Seeing all the items within the context of each other can be very informative<\/li>\n<li>Limit the amount of work in progress (WIP): This helps balance the flow-based approach so teams don&lsquo;t start and commit to too much work at once<\/li>\n<li>Enhance flow: When something is finished, the next highest priority item from the backlog is pulled into play<\/li>\n<\/ul>\n<p>Kanban promotes continuous collaboration and encourages active, ongoing learning and improvement by defining the best possible team workflow.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:18px;\"><strong>Dynamic Systems Development Method (DSDM):<\/strong><\/span><\/p>\n<p>DSDM is a framework that is made up of eight principles, a lifecycle and products, roles and responsibilities and several best practice techniques. These underpin and support a philosophy of delivering strategically aligned business benefits as early as possible to give an organization the best possible return on investment (ROI).<\/p>\n<p>DSDM is a methodology that prioritizes schedule and quality over functionality, which fixes cost, quality and time at the start and uses the MoSCoW method of prioritization, which breaks a project down into four different types of requirements:<\/p>\n<ul>\n<li>Must have (M)<\/li>\n<li>Should have (S)<\/li>\n<li>Could have (C)<\/li>\n<li>Won&rsquo;t have (W)<\/li>\n<\/ul>\n<p>There are eight principles underpinning DSDM Atern[13]. These principles direct the team in the attitude they must take and the mindset they must adopt to deliver consistently.<\/p>\n<ol>\n<li>Focus on the business need<\/li>\n<li>Deliver on time<\/li>\n<li>Collaborate<\/li>\n<li>Never compromise quality<\/li>\n<li>Build incrementally from firm foundations<\/li>\n<li>Develop iteratively<\/li>\n<li>Communicate continuously and clearly<\/li>\n<li>Demonstrate control<\/li>\n<\/ol>\n<p><span style=\"font-size:18px;\"><strong>Extreme Programming:<\/strong><\/span><\/p>\n<p>Extreme Programming&nbsp;(XP), originally described by Kent Beck, has emerged as one of the most popular and controversial Agile methodologies. XP is a disciplined approach to delivering high-quality software quickly and continuously. It is intended to improve software quality and responsiveness in the face of changing customer requirements. It promotes high customer involvement, rapid feedback loops, continuous testing, continuous planning, and close teamwork to deliver working software at very frequent intervals, typically every 1-3 weeks.<\/p>\n<p>The methodology takes its name from the idea that the beneficial elements of traditional software engineering practices are taken to &ldquo;extreme&rdquo; levels. As an example, code reviews are considered a beneficial practice. Taken to the extreme, code can be reviewed continuously through the practice of pair programming.<\/p>\n<p>The original XP method is based on four simple values &ndash; simplicity, communication, feedback, and courage.<\/p>\n<p>It also has twelve supporting practices:<\/p>\n<ul>\n<li>Planning Game<\/li>\n<li>Small Releases<\/li>\n<li>Customer Acceptance Tests<\/li>\n<li>Simple Design<\/li>\n<li>Pair Programming<\/li>\n<li>Test-Driven Development<\/li>\n<li>Refactoring<\/li>\n<li>Continuous Integration<\/li>\n<li>Collective Code Ownership<\/li>\n<li>Coding Standards<\/li>\n<li>Metaphor<\/li>\n<li>Sustainable Pace<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"313\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/extreme-programming.png\" width=\"1021\" \/><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:18px;\"><strong>Feature Driven Development (FDD):<\/strong><\/span><\/p>\n<p>Feature-Driven Development (FDD) was introduced in 1997 by Jeff De Luca when he was working in a software development project for a large Singapore bank. It is an iterative and incremental software development process and is an agile method for developing software. FDD blends a number of industry-recognized best practices into a cohesive whole. These practices are driven from a client-valued functionality (feature) perspective. Its main purpose is to deliver tangible, working software repeatedly in a timely manner. The advantage of using FDD is that it is scalable even to large teams due to the concept of &lsquo;just enough design initially&rsquo; (JEDI). It is a great solution to maintain control over agile, incremental and inherently complex projects because of its feature-centric process. It consists of five basic activities:<\/p>\n<ol>\n<li>Development of an overall model<\/li>\n<li>Building of a feature list<\/li>\n<li>Planning by feature<\/li>\n<li>Designing by feature<\/li>\n<li>Building by feature.<\/li>\n<\/ol>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"326\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/feature-drive-development.png\" width=\"695\" \/><\/p>\n<p>Every project will have its own unique model, which will result in a feature list. The last three activities are short iterative processes, with a feature not taking longer than two weeks to build. If it will take more than two weeks, then it will have to be broken down into smaller features.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:18px;\"><strong>Crystal:<\/strong><\/span><\/p>\n<p>Crystal methods are a family of methodologies (the Crystal family) that were developed by Alistair Cockburn in the mid-1990s. The methods come from years of study and interviews of teams by Cockburn. Cockburn&rsquo;s research showed that the teams he interviewed did not follow the formal methodologies yet they still delivered successful projects. The Crystal family is Cockburn&rsquo;s way of cataloguing what they did that made the projects successful. Crystal methods are focused on:<\/p>\n<ul>\n<li>People<\/li>\n<li>Interaction<\/li>\n<li>Community<\/li>\n<li>Skills<\/li>\n<li>Talents<\/li>\n<li>Communications<\/li>\n<\/ul>\n<h2>&nbsp;<\/h2>\n<p><span style=\"font-size:24px;\"><strong>AGILE MANIFESTO<\/strong><\/span><\/p>\n<p>The term &ldquo;Agile&rdquo; was coined in 2001 in the Agile Manifesto. The manifesto set out to establish principles to guide a better approach to software development.The Agile Manifesto consists of 4 important values. The way to read the Agile Manifesto is not that the items on the right side have no value anymore, but the Agile movement values the items on the left more.<\/p>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"224\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/agile-manifesto.png\" width=\"495\" \/><\/p>\n<figure id=\"attachment_1128\"><figcaption><span style=\"background-color: rgb(255, 255, 255);\">So let&rsquo;s take a look at the first line of the Agile Manifesto. This line states that we value people, their interactions, communication and collaboration more than having all sorts of extensive processes and tools in place. Of course processes and tools are valuable, however, they are much more valuable if they actually support people working together and delivering great products. What we see in a lot of organizations these days, is that the processes and tools are the goal themselves. From an Agile perspective, we value this differently. Processes and tools should be supporting people in working together and delivering value to customers.<\/span><\/figcaption><\/figure>\n<h2>&nbsp;<\/h2>\n<p><span style=\"font-size:24px;\"><span style=\"line-height:normal\"><b>AGILE MANIFESTO PRINCIPLES<\/b><\/span><\/span><\/p>\n<p>Complementing the Agile Manifesto, the Agile Alliance has also defined a set of 12 underlying principles, which provide guidance and more detailed explanation in addition to the Agile Manifesto:<\/p>\n<p style=\"text-align:center\"><img loading=\"lazy\" alt=\"\" height=\"325\" src=\"https:\/\/rikkeisoft.com\/wp-content\/themes\/main\/assets\/ckfinder\/images\/agile-manifesto-principles.png\" width=\"716\" \/><\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_1245\"><figcaption>Agile Manifesto Principles:<\/figcaption><\/figure>\n<ol>\n<li>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.<\/li>\n<li>Welcome changing requirements, even late in development. Agile processes harness change for the customer&rsquo;s competitive advantage.<\/li>\n<li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.<\/li>\n<li>Business people and developers must work together daily throughout the project.<\/li>\n<li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.<\/li>\n<li>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.<\/li>\n<li>Working software is the primary measure of progress.<\/li>\n<li>Agile processes promote sustainable development.<\/li>\n<li>The sponsors, developers, and users should be able to maintain a constant pace indefinitely.<\/li>\n<li>Continuous attention to technical excellence and good design enhances agility.<\/li>\n<li>Simplicity&ndash;the art of maximizing the amount of work not done&ndash;is essential.<\/li>\n<li>The best architectures, requirements, and designs emerge from self-organizing teams. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size:24px;\"><strong>SUMMARY<\/strong><\/span><\/p>\n<p>Agile Development is one of the big buzzwords of the software development industry which is a different way of managing software development projects. Rather than a specific software development method, it is an umbrella term for a set of methods and practices based on the values and principles expressed in the Agile Manifesto. Solutions evolve through collaboration between self-organizing, cross-functional teams utilizing the appropriate practices for their context.<\/p>\n<p>\n<em><strong>Source<\/strong><\/em>:&nbsp;<a href=\"https:\/\/www.visual-paradigm.com\/scrum\/what-is-agile-software-development\/\">https:\/\/www.visual-paradigm.com\/scrum\/what-is-agile-software-development\/<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Agile is a term used to describe approaches to software development emphasizing incremental delivery, team collaboration, continual planning, and continual learning, instead of trying to deliver it all at once near the end. &nbsp; Agile focuses on keeping the process lean and creating minimum viable products (MVPs) that go through a number of iterations before [&hellip;]<\/p>\n","protected":false},"author":5,"featured_media":417,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[17],"tags":[],"yst_prominent_words":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v14.0.4 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>What is Agile Software Development? - \u30d9\u30c8\u30ca\u30e0\u30aa\u30d5\u30b7\u30e7\u30a2\u958b\u767a\u4f01\u696d | \u30ea\u30c3\u30b1\u30a4\u30bd\u30d5\u30c8<\/title>\n<meta name=\"robots\" content=\"index, follow\" \/>\n<meta name=\"googlebot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<meta name=\"bingbot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/\" \/>\n<meta property=\"og:locale\" content=\"vi_VN\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"What is Agile Software Development? - \u30d9\u30c8\u30ca\u30e0\u30aa\u30d5\u30b7\u30e7\u30a2\u958b\u767a\u4f01\u696d | \u30ea\u30c3\u30b1\u30a4\u30bd\u30d5\u30c8\" \/>\n<meta property=\"og:description\" content=\"Agile is a term used to describe approaches to software development emphasizing incremental delivery, team collaboration, continual planning, and continual learning, instead of trying to deliver it all at once near the end. &nbsp; Agile focuses on keeping the process lean and creating minimum viable products (MVPs) that go through a number of iterations before [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/\" \/>\n<meta property=\"og:site_name\" content=\"\u30d9\u30c8\u30ca\u30e0\u30aa\u30d5\u30b7\u30e7\u30a2\u958b\u767a\u4f01\u696d | \u30ea\u30c3\u30b1\u30a4\u30bd\u30d5\u30c8\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-11T14:30:00+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-12-03T08:15:32+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rikkeisoft.com\/wp-content\/uploads\/2021\/12\/what-is-agile-software-development-1.png\" \/>\n\t<meta property=\"og:image:width\" content=\"850\" \/>\n\t<meta property=\"og:image:height\" content=\"450\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rikkeisoft.com\/#website\",\"url\":\"https:\/\/rikkeisoft.com\/\",\"name\":\"\\u30d9\\u30c8\\u30ca\\u30e0\\u30aa\\u30d5\\u30b7\\u30e7\\u30a2\\u958b\\u767a\\u4f01\\u696d | \\u30ea\\u30c3\\u30b1\\u30a4\\u30bd\\u30d5\\u30c8\",\"description\":\"\\u30d9\\u30c8\\u30ca\\u30e0\\u30aa\\u30d5\\u30b7\\u30e7\\u30a2\\u958b\\u767a\\u4f01\\u696d | \\u30ea\\u30c3\\u30b1\\u30a4\\u30bd\\u30d5\\u30c8\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/rikkeisoft.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"vi\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/#primaryimage\",\"inLanguage\":\"vi\",\"url\":\"https:\/\/rikkeisoft.com\/wp-content\/uploads\/2021\/12\/what-is-agile-software-development-1.png\",\"width\":850,\"height\":450},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/#webpage\",\"url\":\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/\",\"name\":\"What is Agile Software Development? - \\u30d9\\u30c8\\u30ca\\u30e0\\u30aa\\u30d5\\u30b7\\u30e7\\u30a2\\u958b\\u767a\\u4f01\\u696d | \\u30ea\\u30c3\\u30b1\\u30a4\\u30bd\\u30d5\\u30c8\",\"isPartOf\":{\"@id\":\"https:\/\/rikkeisoft.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/#primaryimage\"},\"datePublished\":\"2019-10-11T14:30:00+00:00\",\"dateModified\":\"2021-12-03T08:15:32+00:00\",\"author\":{\"@id\":\"https:\/\/rikkeisoft.com\/#\/schema\/person\/0194e8b71dafb06076827553082af72b\"},\"inLanguage\":\"vi\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rikkeisoft.com\/lastest-thinking\/416\/what-is-agile-software-development\/\"]}]},{\"@type\":[\"Person\"],\"@id\":\"https:\/\/rikkeisoft.com\/#\/schema\/person\/0194e8b71dafb06076827553082af72b\",\"name\":\"chitv@rikkeisoft.com\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/rikkeisoft.com\/#personlogo\",\"inLanguage\":\"vi\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/7c746addd5d1710efac023ebbd6f16ff?s=96&d=mm&r=g\",\"caption\":\"chitv@rikkeisoft.com\"}}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","_links":{"self":[{"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/posts\/416"}],"collection":[{"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/comments?post=416"}],"version-history":[{"count":1,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/posts\/416\/revisions"}],"predecessor-version":[{"id":698,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/posts\/416\/revisions\/698"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/media\/417"}],"wp:attachment":[{"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/media?parent=416"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/categories?post=416"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/tags?post=416"},{"taxonomy":"yst_prominent_words","embeddable":true,"href":"https:\/\/rikkeisoft.com\/wp-json\/wp\/v2\/yst_prominent_words?post=416"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}